workdir: "../.." # With this we can specify where should Snakemake look for things relative to this path

rule rename_array:
    input:
        "data/raw/array.npy"
    output:
        "data/processed/array_renamed.npy"
    run:
        import numpy as np
        data = np.load(input[0])
        np.save(output[0], data)

rule combine_two_arrays:
    input: 
        "data/raw/array1.npy",
        "data/raw/array2.npy"
    output:
        "data/processed/combined_array.npy"
    run:
        import numpy as np
        array1 = np.load(input[0])
        array2 = np.load(input[1])
        data = np.concatenate((array1, array2))
        np.save(output[0], data)


rule change_csv_to_parquet:
    input:
        "data/raw/session.csv"
    output:
        "data/processed/session.parquet"
    run:
        import pandas as pd
        import numpy as np
        data = pd.read_csv(input[0])
        data.to_parquet(output[0])


rule standardize_array:
    input:
        "data/raw/array.npy"
    output:
        "data/processed/standardized_array.npy"

    run:
        import numpy as np
        input_array = np.load(input[0])
        output_array = (input_array - np.mean(input_array)) / np.std(input_array)

        np.save(output[0], output_array)


rule normalize_array:
    input:
        "data/raw/array.npy"
    output:
        "data/processed/normalized_array.npy"

    shell:
        'python ../session2/scripts/normalize_array.py {input[0]} {output[0]}'

rule valid_session:
    input:
        "data/raw/session.csv"
    output:
        "data/processed/session_valid.csv" 
    shell:
        'python ../session4/scripts/extract_valid_trials.py {input[0]} {output[0]}'

rule combine_data:
    input: 
        "data/raw/array1.npy",
        "data/raw/array2.npy"
    output:
        "data/processed/combined_data.csv"
    run:
        import numpy as np
        import pandas as pd
        array1 = np.load(input[0])
        array2 = np.load(input[1])
        df = pd.DataFrame({
            'array1':array1,
            'array2':array2})

        df.to_csv(output[0])